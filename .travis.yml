---

sudo: required
dist: xenial
env:
  global:
    - TERRAFORM_VERSION=0.12.2
    - KUBECTL_VERSION=v1.15.0
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_VERSION=v1.2.0
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config
    - HELM_VERSION=v2.14.3
    # Default namespace for tiller in variables.tf is kube-system.
    - TILLER_K8S_NAMESPACE=kube-system
    # Default label for Tiller is helm.
    - TILLER_K8S_LABEL=helm

before_script:
  # socat is needed by helm
  - sudo apt-get install -yq socat
  # Download helm
  - wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz && tar xzf helm-${HELM_VERSION}-linux-amd64.tar.gz && chmod +x linux-amd64/helm && sudo mv linux-amd64/helm /usr/local/bin && rm -rf linux-amd64
  # Download terraform
  - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && unzip -q terraform_${TERRAFORM_VERSION}_linux_amd64.zip && chmod +x terraform && sudo mv terraform /usr/local/bin
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - mkdir -p ${HOME}/.kube ${HOME}/.minikube
  - touch $KUBECONFIG
  - sudo minikube start --vm-driver=none --kubernetes-version=${KUBECTL_VERSION}
  - "sudo chown -R travis: /home/travis/.minikube/"

script:
  - kubectl cluster-info
  # kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "Waiting for kube-addon-manager to be available"; kubectl get pods --all-namespaces; done
  # Wait for kube-dns to be ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "Waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
  - terraform init && terraform apply -lock=false -auto-approve
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n ${TILLER_K8S_NAMESPACE} get pods -lapp=${TILLER_K8S_LABEL} -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "Waiting for Tiller deployment to be available"; kubectl get pods --all-namespaces; done
  - helm version
